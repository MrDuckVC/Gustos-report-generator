"""
Django settings for main project.

Generated by "django-admin startproject" using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from enum import Enum
from pathlib import Path

from main.utils import env


class Database(Enum):
    DEFAULT = "default"
    GUSTOS = "gustos"


# Build paths inside the project like this: BASE_DIR / "subdir".
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.get_str("SECRET_KEY", "secret-key-to-be-changed")

# SECURITY WARNING: don"t run with debug turned on in production!
DEBUG = env.get_bool("DEBUG", False)

ALLOWED_HOSTS = env.get_list("ALLOWED_HOSTS", ["localhost", "127.0.0.1"])

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "sass_processor",
    "generator.apps.GeneratorConfig",
    "gustos.apps.GustosConfig",
    "django_bootstrap5",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.media",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "generator.context_processors.sections",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    Database.DEFAULT.value: {
        "ENGINE": "django.db.backends.mysql",
        "HOST": env.get_str("MYSQL_HOST", "localhost"),
        "PORT": env.get_int("MYSQL_PORT", 3306),
        "NAME": env.get_str("MYSQL_DATABASE", "gustos-reports-generator"),
        "USER": env.get_str("MYSQL_USER", "gustos-reports-generator"),
        "PASSWORD": env.get_str("MYSQL_PASSWORD", "password"),
        "OPTIONS": {
            "init_command": "SET default_storage_engine=INNODB",
            "charset": "utf8mb4",
        },
    },
    Database.GUSTOS.value: {
        "ENGINE": "django.db.backends.mysql",
        "HOST": env.get_str("MYSQL_GUSTOS_HOST", "localhost"),
        "PORT": env.get_int("MYSQL_GUSTOS_PORT", 3306),
        "NAME": env.get_str("MYSQL_GUSTOS_DATABASE", "gustos"),
        "USER": env.get_str("MYSQL_GUSTOS_USER", "gustos"),
        "PASSWORD": env.get_str("MYSQL_GUSTOS_PASSWORD", "password"),
        "OPTIONS": {
            "init_command": "SET default_storage_engine=INNODB",
            "charset": "utf8mb4",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = env.get_str("TZ", "UTC")

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "sass_processor.finders.CssFinder",
]

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
        "task_log_handler": {
            "class": "generator.logging.TaskLogHandler",
            "level": "DEBUG",
        },
    },
    "root": {
        "handlers": ["console", "task_log_handler"],
        "level": "INFO",
    },
    "loggers": {
        "": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": False,
        },
        "celery": {
            "handlers": ["task_log_handler", "console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}


# Celery settings
CELERY_BROKER_URL = env.get_str("CELERY_BROKER_URL", "redis://redis:6379/0")
CELERY_RESULT_BACKEND = env.get_str("CELERY_RESULT_BACKEND", "redis://redis:6379/0")
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"


# Custom settings
THREAD_POOL_SIZE = env.get_int("THREAD_POOL_SIZE", os.cpu_count())

GWMR_FINDER_DOMAIN = env.get_str("GWMR_FINDER_DOMAIN", "gwmr.local")
